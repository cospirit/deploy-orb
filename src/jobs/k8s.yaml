description: >
  "Steps sequence for Kubernetes deployment"

executor: default

parameters:
  service:
    type: string
    default: ""
    description: >
      Application service to deploy in Kubernetes.
  env:
    type: enum
    default: "development"
    enum: [ "development", "staging", "production" ]
    description: >
      Running environment.
  cluster_name:
    type: string
    default: ""
    description: >
      Name of the AKS cluster.
  resource_group:
    type: string
    default: ""
    description: >
      Azure resource group including the AKS cluster.
  version_file:
    type: string
    default: "VERSION"
    description: >
      Name of the file that handles the current service version number.
  repository:
    type: string
    default: ""
    description: "Repository hosting Helm configurations"
  git_email:
    type: env_var_name
    default: "GIT_USER_EMAIL"
    description: >
      Name of the environment variable for the email of
      Git user used to push the new tag.
  git_user:
    type: env_var_name
    default: "GIT_USER_NAME"
    description: >
      Name of the environment variable for the user name of
      Git user used to push the new tag.
  helm_client_version:
    type: string
    default: "v2.17.0"
    description: >
      Version of Helm client to use for Kubernetes deployments.

steps:
  - run:
      name: Clone Deployment repository
      command: git clone git@github.com:cospirit/<< parameters.repository >> deployment
  - run:
      name: Update version in service configuration
      working_directory: deployment/clusters/<< parameters.env >>
      command: |
        sed -i '0,/version:.*$/ s/version:.*$/version: \"'$(cat << parameters.version_file >>)'\"/' values.services.<< parameters.service >>.yaml
        head -n 3 values.services.<< parameters.service >>.yaml
  - helm/install-helm-client:
      version: << parameters.helm_client_version >>
  - azure-aks/update-kubeconfig-with-credentials:
      cluster-name: << parameters.cluster_name >>
      install-kubectl: true
      perform-login: true
      resource-group: << parameters.resource_group >>
  - run:
      name: Deploy to << parameters.env >> cluster
      working_directory: deployment/clusters/<< parameters.env >>
      command: FORCE=1 make deploy.services.<< parameters.service >>
  - run:
      name: Commit and push service configuration file
      working_directory: deployment
      environment:
        COMMIT_MSG: "k8s: update << parameters.service >> service version to $(cat << parameters.version_file >>)"
        COMMIT_FILE: clusters/<< parameters.env >>/values.services.<< parameters.service >>.yaml
      command: << include(scripts/git_push.sh) >>
