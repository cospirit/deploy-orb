description: >
  Build Docker image depending on running environment.
  Dev env will only build Docker image.
  In staging and production environments, the built image is also pushed on ACR registry.
  This job assumes that you have previously declared following environment variables:
  - AZURE_SP
  - AZURE_SP_PASSWORD
  - AZURE_SP_TENANT

parameters:
  service:
    type: string
    description: >
      Application service to build Docker image for.
  env:
    type: enum
    default: "development"
    enum: [ "development", "staging", "production" ]
    description: >
      Running environment.
  version_file:
    type: string
    default: "VERSION"
    description: >
      Name of the file that handles the current service version number.
  pattern:
    type: string
    default: release\/v?(([0-9]+\.?){1,3}).*
    description: >
      Regex pattern of the branch used to extract version number.
      VERSION file will be updated using this value.
  git_email:
    type: env_var_name
    default: "GIT_USER_EMAIL"
    description: >
      Name of the environment variable for the email of
      Git user used to push the new tag.
  git_user:
    type: env_var_name
    default: "GIT_USER_NAME"
    description: >
      Name of the environment variable for the user name of
      Git user used to push the new tag.
  lint-dockerfile:
    type: bollean
    default: true
    description: >
      Whether to lint Dockerfile before building.
  dockerfile:
    type: string
    default: "docker/code/Dockerfile"
    description: >
      Path to the Dockerfile to use.
      This Path is relative to working dir.
  extra_build_args:
    type: string
    default: "--pull"
    description: >
      Extra args to pass to Docker build command.
  registry_name:
    type: string
    default: ""
    description: >
      ACR registry hosting Docker images.
  persist_tag:
    type: boolean
    default: true
    description: >
      Persist the tag of the Docker image to be able to use it in following jobs.
      The tag will be persisted in ~/release/docker-image-tag.txt.
  checkout:
    type: boolean
    default: true
    description: >
      Whether to perform the CircleCI checkout step.

steps:
  - when:
      condition: << parameters.checkout >>
      steps:
        - checkout
  # build image for dev environment
  - when:
      condition:
        equal: [ development, << parameters.env >> ]
      steps:
        - run:
            name: Get service version
            command: |
              version="$(cat << parameters.version_file >>)"
              echo "export VERSION=$version" >> $BASH_ENV
              echo "export TAG=$version" >> $BASH_ENV
        - docker/build:
            dockerfile: << parameters.dockerfile >>
            extra_build_args: << parameters.extra_build_args >>
            image: << parameters.service >>
            lint-dockerfile: << parameters.lint-dockerfile >>
            step-name: Build Docker image for production
            tag: ${TAG}
  # build image for staging / prod environments
  - when:
      condition:
        or:
          - equal: [ staging, << parameters.env >> ]
          - equal: [ production, << parameters.env >> ]
      steps:
        # production: set env vars
        - when:
            condition:
              equal: [ production, << parameters.env >> ]
            steps:
              - run:
                  name: Set version env vars for << parameters.env >>
                  command: |
                    version="$(cat << parameters.version_file >>)"
                    echo "export VERSION=$version" >> $BASH_ENV
                    echo "export TAG=$version" >> $BASH_ENV
        # staging: set env vars
        - when:
            condition:
              equal: [ staging, << parameters.env >> ]
            steps:
              - run:
                  name: Set version env vars for << parameters.env >>
                  command: |
                    version=$(echo "${CIRCLE_BRANCH}" | sed -E "s/<< parameters.pattern >>/\\1/")
                    echo "export VERSION=$version" >> "$BASH_ENV"
                    echo "export TAG=$version-build.$CIRCLE_BUILD_NUM" >> $BASH_ENV
        - azure-acr/build-and-push-image:
            checkout: false
            lint-dockerfile: << parameters.lint-dockerfile >>
            login-server-name: << parameters.registry_name >>.azurecr.io
            registry-name: << parameters.registry_name >>
            repo: << parameters.service >>
            dockerfile: << parameters.dockerfile >>
            extra-build-args: << parameters.extra_build_args >>
            tag: ${TAG}
        - when:
            condition:
              equal: [ staging, << parameters.env >> ]
            steps:
              - update-version:
                  pattern: << parameters.pattern >>
                  version_file: << parameters.version_file >>
                  git_email: <<parameters.git_email >>
                  git_user: << parameters.git_user >>
  - when:
      condition: << parameters.persist_tag >>
      steps:
        - run:
            name: Create version file
            command: |
              if [ ! -d ~/release ]; then
                mkdir -p ~/release
              fi
              echo ${TAG} >> ~/release/docker-image-tag.txt
        - persist_to_workspace:
            root: ~/release
            paths:
              - docker-image-tag.txt
