description: >
  Sample example to use the k8s job to deploy an app in a Kubernetes.
  In this example, the Docker image of the app is built for all branches
  and push on ARC registry for staging and produciton environments.

  Docker image is then deployed to Kubernetes cluster using Helm.

  Image tag is passed between build and deploy with persist_tag parameter of build-image job.

  In production, when the deployment successfully finished, the git tag creation is triggered.
  The tag is corresponding to the content of a file (VERSION by default).
  The deployments are executed on AKS clusters only for the moment.
usage:
  version: 2.1
  orbs:
    deploy: cospirit/deploy@1.2.3

workflows:
  version: 2
  workflow:
    jobs:
      # Development jobs
      - deploy/build-image:
          service: my-awesome-app
          persist_tag: false
          name: build-image
          filters:
            branches:
              ignore:
                - main
                - master
                - /release\/v?([0-9]+\.?){1,3}/
                - /hotfix\/.*/
      # Staging jobs
      - deploy/build-image:
          context: my-staging-context
          service: my-awesome-app
          env: staging
          registry_name: myregistry
          name: build-image-staging
          filters:
            branches:
              only:
                - /release\/v?([0-9]+\.?){1,3}/
      - deploy/k8s:
          context: my-staging-context
          service: my-awesome-app
          env: staging
          cluster_name: k8s-staging-cluster
          resource_group: k8s-staging-cluster_resourceGroup
          repository: deployment
          requires: [ build-image-staging ]
      # Production jobs
      - deploy/build-image:
          context: my-production-context
          service: my-awesome-app
          env: production
          registry_name: myregistry
          name: build-image-prod
          filters:
            branches:
              only: [ main, master ]
      - wait-for-approval:
          type: approval
          requires: [ build-image-prod ]
      - deploy/k8s:
          context: my-production-context
          service: my-awesome-app
          env: production
          cluster_name: k8s-production-cluster
          resource_group: k8s-production-cluster_resourceGroup
          repository: deployment
          create_git_tag: true
          requires: [ wait-for-approval ]
